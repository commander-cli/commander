version: 2.1
orbs:
  win: circleci/windows@2.2.0

runOnAllTagsAndBranches: &runOnAllTagsAndBranches
  filters:
    tags:
      only: /.*/
    branches:
      only: /.*/

runOnDefaultBranchAndTags: &runOnDefaultBranchAndTags
  filters:
    tags:
      only: /.*/
    branches:
      only: master

jobs:
  style:
    docker:
      - image: circleci/golang:1.16
    steps:
      - checkout
      - run: go vet ./...
      - run: if [ $(go fmt ./... | wc -l) -eq 0  ]; then exit 0; else echo "please run go fmt ./..."; exit 1; fi

  test:
    docker:
      - image: circleci/golang:1.16

    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
      - run:
          name: Run tests
          command: |
            ping google.com -c 3 -t 5s
            ping github.com -c 3 -t 5s
            nslookup google.com
            nslookup github.com
            make test-coverage-all-dockerized-with-codeclimate
            ping google.com -c 3 -t 5s
            ping github.com -c 3 -t 5s
            nslookup google.com
            nslookup github.com

  # higher support plan is necessary
  # test-macos:
  #   macos:
  #     xcode: 11.7.0
  #   steps:
  #   - checkout
  #   - run: go test ./...

  test-windows:
    executor:
      name: win/default
      shell: powershell.exe
    steps:
      - checkout
      - run: choco install make
      - run: make test

  integration:
    docker:
      - image: circleci/golang:1.16
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
      - run:
          name: Install commander
          command: |
            mkdir -p ~/.local/bin/
            curl -L https://github.com/commander-cli/commander/releases/download/v2.4.0/commander-linux-amd64 -o ~/.local/bin/commander
            chmod +x ~/.local/bin/commander
      - run: make integration-linux-dockerized

  integration-windows:
    executor:
      name: win/default
      shell: powershell.exe
    steps:
      - checkout
      - run: choco install make
      - run: choco install curl
      - run: Invoke-WebRequest -Uri "https://github.com/commander-cli/commander/releases/download/v2.4.0/commander-darwin-amd64" -OutFile "C:\Windows\system32\commander.exe"
      - run: make integration-windows

  deploy:
    environment:
      GIT_RELEASE_TAG: << pipeline.git.tag >>
    docker:
      - image: circleci/golang:1.16
    steps:
      - checkout
      - run: go install github.com/tcnksm/ghr@v0.14.0
      - run: make release
      - run:
          name: Publish release
          command: ghr $GIT_RELEASE_TAG release/

workflows:
  version: 2.1
  workflow:
    jobs:
      - style:
          <<: *runOnAllTagsAndBranches
      - test:
          <<: *runOnAllTagsAndBranches
      - test-windows:
          <<: *runOnDefaultBranchAndTags
      - integration:
          <<: *runOnAllTagsAndBranches
      - integration-windows:
          <<: *runOnDefaultBranchAndTags
      - deploy:
          requires:
            - style
            - test
            - test-windows
            - integration
            - integration-windows
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
